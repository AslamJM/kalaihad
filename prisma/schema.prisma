// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model Post {
    id        Int      @id @default(autoincrement())
    name      String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([name])
}

enum Role {
    SUPER_ADMIN
    ADMIN
    EMPLOYEE
}

model Store {
   id        Int      @id @default(autoincrement()) 
   name String
   address String
   phone String
   email String

   users User[]
   products Product[]
}

model Product {
  id        Int      @id @default(autoincrement())  
  name String
  quantity Int
  buying_price Float
  selling_price Float
  store_id Int

  store Store @relation(fields: [store_id],references: [id])
  histories StockHistory[]
  sale_details SaleDetails[]    

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt 
}

enum StockActions {
    CREATED
    ADDED
    EDITED
    SALE
}

enum EditType {
    INC
    DEC
}

model StockHistory {
    id        Int      @id @default(autoincrement())
    action StockActions
    quantity Int
    product_id Int
    createdAt DateTime @default(now())

    product Product @relation(fields: [product_id],references: [id])
    edits StockHistoryEdit[]
}

model StockHistoryEdit {
    id        Int      @id @default(autoincrement())
    history_id Int 
    type EditType
    amount Int
    createdAt DateTime @default(now())

    stock_history StockHistory @relation(fields: [history_id],references: [id])
}

model User {
    id        String     @id @default(uuid()) 
    name String
    email String @unique
    password String

    role Role 
    stores Store[]
}

model Customer {
   id        Int     @id @default(autoincrement())
    name String
    Sales Sale[]
    created_at DateTime @default(now())
    updated_at DateTime @updatedAt
}

model Sale {
  id        Int     @id @default(autoincrement()) 
  customer_id Int
  sale_date DateTime

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

   customer Customer @relation(fields: [customer_id],references: [id]) 
  sale_details SaleDetails[]
  payment Payment?
}

model SaleDetails {
  product_id Int  
  sale_id Int
  quantity Int  

  sale Sale @relation(fields: [sale_id],references: [id])
  product Product @relation(fields: [product_id],references: [id])

  @@id(name: "sale_detail_id",fields: [product_id,sale_id])
}

enum PaymentMethod {
    CASH
    CHEQUE
}

enum PaymentStatus {
    PENDING
    PAID
}

model Payment {
    sale_id Int @id
    total Float
    paid Float
    outstanding Float
    discount Float
    payment_method PaymentMethod
    payment_status PaymentStatus @default(PENDING)
    due_date DateTime
    updated_at DateTime @updatedAt

    sale Sale @relation(fields: [sale_id],references: [id])
    payment_histories PaymentHistory[]
}

model PaymentHistory {
    id Int @id @default(autoincrement())
    amount Float
    date DateTime
    payment_id Int

    payment Payment @relation(fields: [payment_id],references: [sale_id])

    edits PaymentHistoryEdit[]
}

model PaymentHistoryEdit {
    id        Int      @id @default(autoincrement())
    history_id Int 
    type EditType
    amount Float
    createdAt DateTime @default(now())

    payment_history PaymentHistory @relation(fields: [history_id],references: [id])
}